[
    {
        "engine_name": "structure",
        "fingerprint": "53be9b465e05b2ce7050cc41fa1d92c5",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `getConvertedFileDownload` has 27 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/controller/conversion/index.ts",
            "lines": {
                "begin": 99,
                "end": 133
            }
        },
        "other_locations": [],
        "remediation_points": 648000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "97c5e6b6b44cdfafbe90f39b3f224502",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `handleMultipartFormData` has 29 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/controller/conversion/index.ts",
            "lines": {
                "begin": 137,
                "end": 169
            }
        },
        "other_locations": [],
        "remediation_points": 696000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "db7d33c398a7281b943944f28423eafa",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `convertToTargetFormat` has 30 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/service/ffmpeg/index.ts",
            "lines": {
                "begin": 18,
                "end": 55
            }
        },
        "other_locations": [],
        "remediation_points": 720000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "41c288565196eae8436cce26f3107b8a",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `convertFile` has 35 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/service/conversion/index.ts",
            "lines": {
                "begin": 40,
                "end": 77
            }
        },
        "other_locations": [],
        "remediation_points": 840000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "7b856305df2fa6d77e77484888c19c1c",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `response` has 26 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/service/conversion/conversionQueue.ts",
            "lines": {
                "begin": 97,
                "end": 128
            }
        },
        "other_locations": [],
        "remediation_points": 624000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "4e1939b4140509744d31fff4b9e165a1",
        "categories": [
            "Complexity"
        ],
        "check_name": "file_lines",
        "content": {
            "body": ""
        },
        "description": "File `routes.ts` has 310 lines of code (exceeds 250 allowed). Consider refactoring.",
        "location": {
            "path": "src/routes/routes.ts",
            "lines": {
                "begin": 1,
                "end": 431
            }
        },
        "other_locations": [],
        "remediation_points": 2064000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "407cd46c049818c5fe51a78beed8e724",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_complexity",
        "content": {
            "body": "# Cognitive Complexity\nCognitive Complexity is a measure of how difficult a unit of code is to intuitively understand. Unlike Cyclomatic Complexity, which determines how difficult your code will be to test, Cognitive Complexity tells you how difficult your code will be to read and comprehend.\n\n### A method's cognitive complexity is based on a few simple rules:\n* Code is not considered more complex when it uses shorthand that the language provides for collapsing multiple statements into one\n* Code is considered more complex for each \"break in the linear flow of the code\"\n* Code is considered more complex when \"flow breaking structures are nested\"\n\n### Further reading\n* [Cognitive Complexity docs](https://docs.codeclimate.com/v1.0/docs/cognitive-complexity)\n* [Cognitive Complexity: A new way of measuring understandability](https://www.sonarsource.com/docs/CognitiveComplexity.pdf)\n"
        },
        "description": "Function `RegisterRoutes` has a Cognitive Complexity of 12 (exceeds 5 allowed). Consider refactoring.",
        "location": {
            "path": "src/routes/routes.ts",
            "lines": {
                "begin": 128,
                "end": 428
            }
        },
        "other_locations": [],
        "remediation_points": 850000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "e00326ecfa20035780aa6cd72890f23e",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `RegisterRoutes` has 203 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/routes/routes.ts",
            "lines": {
                "begin": 128,
                "end": 428
            }
        },
        "other_locations": [],
        "remediation_points": 4872000,
        "severity": "major",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "361c68beebf3948a27f211aa6ad5ae74",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_complexity",
        "content": {
            "body": "# Cognitive Complexity\nCognitive Complexity is a measure of how difficult a unit of code is to intuitively understand. Unlike Cyclomatic Complexity, which determines how difficult your code will be to test, Cognitive Complexity tells you how difficult your code will be to read and comprehend.\n\n### A method's cognitive complexity is based on a few simple rules:\n* Code is not considered more complex when it uses shorthand that the language provides for collapsing multiple statements into one\n* Code is considered more complex for each \"break in the linear flow of the code\"\n* Code is considered more complex when \"flow breaking structures are nested\"\n\n### Further reading\n* [Cognitive Complexity docs](https://docs.codeclimate.com/v1.0/docs/cognitive-complexity)\n* [Cognitive Complexity: A new way of measuring understandability](https://www.sonarsource.com/docs/CognitiveComplexity.pdf)\n"
        },
        "description": "Function `createConfiguration` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring.",
        "location": {
            "path": "src/init/index.ts",
            "lines": {
                "begin": 17,
                "end": 47
            }
        },
        "other_locations": [],
        "remediation_points": 350000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "997f14abe7f3d87498cd36255f8dc8c7",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_complexity",
        "content": {
            "body": "# Cognitive Complexity\nCognitive Complexity is a measure of how difficult a unit of code is to intuitively understand. Unlike Cyclomatic Complexity, which determines how difficult your code will be to test, Cognitive Complexity tells you how difficult your code will be to read and comprehend.\n\n### A method's cognitive complexity is based on a few simple rules:\n* Code is not considered more complex when it uses shorthand that the language provides for collapsing multiple statements into one\n* Code is considered more complex for each \"break in the linear flow of the code\"\n* Code is considered more complex when \"flow breaking structures are nested\"\n\n### Further reading\n* [Cognitive Complexity docs](https://docs.codeclimate.com/v1.0/docs/cognitive-complexity)\n* [Cognitive Complexity: A new way of measuring understandability](https://www.sonarsource.com/docs/CognitiveComplexity.pdf)\n"
        },
        "description": "Function `createConversionPrecedenceOrderConfig` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring.",
        "location": {
            "path": "src/init/index.ts",
            "lines": {
                "begin": 48,
                "end": 85
            }
        },
        "other_locations": [],
        "remediation_points": 350000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "3c0f9b3deb3553dd7794661cf2bd7025",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `createConversionPrecedenceOrderConfig` has 34 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/init/index.ts",
            "lines": {
                "begin": 48,
                "end": 85
            }
        },
        "other_locations": [],
        "remediation_points": 816000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "structure",
        "fingerprint": "98f5b85816b9fb43be5fc73f69aa1df7",
        "categories": [
            "Complexity"
        ],
        "check_name": "method_lines",
        "content": {
            "body": ""
        },
        "description": "Function `createWrapperConfiguration` has 31 lines of code (exceeds 25 allowed). Consider refactoring.",
        "location": {
            "path": "src/init/index.ts",
            "lines": {
                "begin": 104,
                "end": 136
            }
        },
        "other_locations": [],
        "remediation_points": 744000,
        "severity": "minor",
        "type": "issue"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "9cd6907d91be6355e231be7d36e6fe57",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 3,
                "end": 3
            },
            "path": "src/service/ffmpeg/interface.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "9cd6907d91be6355e231be7d36e6fe57",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 11,
                "end": 11
            },
            "path": "src/service/ffmpeg/interface.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "7f1a4fe83b8aa65cfa0ca4d64642a105",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 24,
                "end": 24
            },
            "path": "src/service/api/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "7f1a4fe83b8aa65cfa0ca4d64642a105",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 27,
                "end": 27
            },
            "path": "src/service/api/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "a8b5aa14220643efe43de849a7c780ad",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 32,
                "end": 32
            },
            "path": "src/service/api/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "7f1a4fe83b8aa65cfa0ca4d64642a105",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 36,
                "end": 36
            },
            "path": "src/service/api/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "c570163b838368f55d810864fad2f33a",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 18,
                "end": 18
            },
            "path": "src/init/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "8e89c0aadabd57725608232354e34283",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 34,
                "end": 34
            },
            "path": "src/init/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "7809e7ee3fc2e1761936b067ae7ba88e",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 36,
                "end": 36
            },
            "path": "src/init/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "10bac2a782e1614cfcb82441aedd58c5",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 49,
                "end": 49
            },
            "path": "src/init/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "10bac2a782e1614cfcb82441aedd58c5",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 87,
                "end": 87
            },
            "path": "src/init/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "7c3b5dbf0cf117a6e846e7da4e30c0eb",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 140,
                "end": 140
            },
            "path": "src/init/index.ts"
        },
        "type": "issue",
        "severity": "minor"
    },
    {
        "engine_name": "fixme",
        "fingerprint": "1105c7a6bc23e0359b2eb21c1e892009",
        "categories": [
            "Bug Risk"
        ],
        "check_name": "TODO",
        "description": "TODO found",
        "location": {
            "lines": {
                "begin": 8,
                "end": 8
            },
            "path": "src/init/interface.ts"
        },
        "type": "issue",
        "severity": "minor"
    }
]